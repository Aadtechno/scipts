pipeline {
    agent { label 'your-gcs-enabled-node' }

    environment {
        GCS_SOURCE_PATH = 'gs://northamerica/canada/internal/*/delete/'
        CUTOFF_DATE = '2025-03-31'
    }

    stages {
        stage('Filtered List Files from GCS') {
            steps {
                sh '''
                    echo "Filtering files modified on or before ${CUTOFF_DATE}, excluding *.yml"

                    # Convert cutoff date to epoch
                    cutoff_epoch=$(date -d "${CUTOFF_DATE}" +%s)

                    # List, filter, and print matching files
                    gsutil ls -l ${GCS_SOURCE_PATH}** | grep -v '^ *TOTAL:' | while read -r size timestamp filepath; do
                        [[ -z "$timestamp" || -z "$filepath" || "$filepath" == *.yml ]] && continue

                        file_epoch=$(date -d "$timestamp" +%s)

                        if [[ $file_epoch -le $cutoff_epoch ]]; then
                            echo "$size  $timestamp  $filepath"
                        fi
                    done
                '''
            }
        }
    }
}
_________
#!/bin/bash

INPUT_FILE="gcs_delete_commands.txt"    # Your input file with full 'gsutil rm -a' commands
LOG_FILE="gcs_deletion_log_$(date +%Y%m%d_%H%M%S).log"

# Make sure the log file is empty before starting
> "$LOG_FILE"

echo "Starting deletion process at $(date)"
echo "Logging to $LOG_FILE"
echo

# Read and execute each line from the file
while IFS= read -r cmd; do
  # Skip empty or whitespace-only lines
  [[ -z "$cmd" || "$cmd" =~ ^[[:space:]]*$ ]] && continue

  echo "Running: $cmd" | tee -a "$LOG_FILE"
  eval "$cmd" >> "$LOG_FILE" 2>&1
done < "$INPUT_FILE"

echo
echo "âœ… All commands executed. Final log saved to $LOG_FILE"

