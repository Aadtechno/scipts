pipeline {
    agent { label 'your-gcs-enabled-node' }

    environment {
        OUTPUT_FILE = 'deleted_files_list.txt'
        CUTOFF_DATE = '2025-03-31'
        GCS_SOURCE_PATH = 'gs://northamerica/canada/internal/*/delete/'
        GCS_LOG_UPLOAD_PATH = 'gs://your-logging-bucket/path/deleted_files_list.txt'
    }

    stages {
        stage('Prompt') {
            steps {
                script {
                    echo "============================================================================"
                    echo "                      GCS File Cleanup - DRY RUN MODE                       "
                    echo "----------------------------------------------------------------------------"
                    echo "Scanning path: ${env.GCS_SOURCE_PATH}"
                    echo
                    echo "âœ” Includes all subfolders"
                    echo "âœ” Filters: Only files modified on or before ${env.CUTOFF_DATE}"
                    echo "âœ˜ Skips files with .yml extension"
                    echo
                    echo "ðŸ”Ž This is a DRY RUN â€” NO FILES WILL BE DELETED"
                    echo "ðŸ“„ Filtered results will be:"
                    echo "    - Shown below in Jenkins console output"
                    echo "    - Saved to ${env.OUTPUT_FILE}"
                    echo "    - Uploaded to: ${env.GCS_LOG_UPLOAD_PATH}"
                    echo
                    echo "ðŸ’¡ Please review before enabling actual deletion logic."
                    echo "============================================================================"
                }
            }
        }

        stage('List and Filter Files') {
            steps {
                sh """
                    > ${OUTPUT_FILE}

                    cutoff_epoch=\$(date -d "${CUTOFF_DATE}" +%s)

                    gsutil ls -l ${GCS_SOURCE_PATH}** | grep -v '^ *TOTAL:' | while read -r size timestamp filepath; do
                        [[ -z "\$timestamp" || -z "\$filepath" || "\$filepath" == *.yml ]] && continue

                        file_epoch=\$(date -d "\$timestamp" +%s)

                        if [[ \$file_epoch -le \$cutoff_epoch ]]; then
                            echo "\$size  \$timestamp  \$filepath" | tee -a ${OUTPUT_FILE}
                        fi
                    done

                """
            }
        }

        stage('Upload Report to GCS') {
            steps {
                sh "gsutil cp ${OUTPUT_FILE} ${GCS_LOG_UPLOAD_PATH}"
            }
        }
    }

    post {
        always {
            echo "Pipeline completed (Dry Run Mode). Please check the uploaded file for review."
        }
    }
}
