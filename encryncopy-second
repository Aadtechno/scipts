pipeline {
    agent none

    environment {
        // Define environments and their corresponding full GCS paths
        ENVIRONMENTS = [
            'npe': 'gs://your-npe-bucket-name/path/to/your/file.txt',
            'uat': 'gs://your-uat-bucket-name/path/to/your/file.txt',
            'prod': 'gs://your-prod-bucket-name/path/to/your/file.txt'
        ]
        AGENT_LABELS = [
            'npe': 'npe-agent-label',
            'uat': 'uat-agent-label',
            'prod': 'prod-agent-label'
        ]
        DOWNSTREAM_JOBS = [
            'npe': 'downstream-job-npe',
            'uat': 'downstream-job-uat',
            'prod': 'downstream-job-prod'
        ]
    }

    stages {
        stage('Check Files') {
            parallel {
                ENVIRONMENTS.each { env, gcsPath ->
                    stage("Check File in ${env.toUpperCase()}") {
                        agent { label AGENT_LABELS[env] }
                        steps {
                            script {
                                echo "Checking file in ${env.toUpperCase()} bucket"
                                def fileExists = sh(script: "gsutil -q stat ${gcsPath}", returnStatus: true) == 0

                                if (fileExists) {
                                    echo "File exists in ${env.toUpperCase()} bucket"
                                    build job: DOWNSTREAM_JOBS[env], wait: false
                                } else {
                                    error "File does not exist in ${env.toUpperCase()} bucket"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
