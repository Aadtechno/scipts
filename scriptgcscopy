pipeline {
    agent any

    environment {
        SOURCE_FILE_GCS = "gs://your-bucket/source_file.txt" // GCS path of the source file list
        DESTINATION_BUCKET = "gs://test/" // Destination GCS bucket
    }

    stages {
        stage('Download and Display Source File') {
            steps {
                script {
                    println "Downloading source_file.txt from ${SOURCE_FILE_GCS}"
                    def downloadCmd = "gcloud storage cp ${SOURCE_FILE_GCS} source_file.txt"
                    def result = sh(script: downloadCmd, returnStatus: true)

                    if (result != 0) {
                        error "Error: Failed to download ${SOURCE_FILE_GCS}"
                    }

                    println "Contents of source_file.txt:"
                    sh "cat source_file.txt"
                }
            }
        }

        stage('List Each Source File') {
            steps {
                script {
                    println "Listing and verifying files from source_file.txt"

                    def fileList = readFile('source_file.txt').readLines()
                    fileList.each { sourceFile ->
                        if (sourceFile.trim()) { // Ensure the line is not empty
                            println "Listing ${sourceFile}"

                            def listCmd = "gsutil ls -l ${sourceFile}"
                            def result = sh(script: listCmd, returnStatus: true)

                            if (result != 0) {
                                error "Error: ${sourceFile} does not exist or cannot be accessed"
                            }
                        }
                    }

                    println "All source files verified successfully."
                }
            }
        }

        stage('Copy Files to Destination') {
            steps {
                script {
                    println "Copying files to ${DESTINATION_BUCKET}"

                    def fileList = readFile('source_file.txt').readLines()
                    fileList.each { sourceFile ->
                        if (sourceFile.trim()) { // Ensure the line is not empty
                            println "Copying ${sourceFile} to ${DESTINATION_BUCKET}"

                            def copyCmd = "gsutil cp ${sourceFile} ${DESTINATION_BUCKET}"
                            def result = sh(script: copyCmd, returnStatus: true)

                            if (result != 0) {
                                error "Error: Failed to copy ${sourceFile}"
                            }
                        }
                    }

                    println "All files copied successfully."
                }
            }
        }

        stage('Verify Destination') {
            steps {
                script {
                    println "Verifying files in ${DESTINATION_BUCKET}"

                    // List all files in the destination bucket
                    def listDestCmd = "gsutil ls -l ${DESTINATION_BUCKET}"
                    sh(script: listDestCmd)

                    // Display the total size of the files in the destination bucket
                    def duDestCmd = "gsutil du -s ${DESTINATION_BUCKET}"
                    sh(script: duDestCmd)
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
